{"version":3,"sources":["../../src/app/common/services/authService.ts"],"names":[],"mappings":"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","file":"authService.js","sourcesContent":["import {Injectable, Inject} from '@angular/core';\r\nimport {EventEmitter} from '@angular/core';\r\nimport {Http, Headers, Response} from '@angular/http';\r\n\r\nimport {ErrorInfo} from '../../domain/ErrorInfo';\r\nimport {LoginInfo} from '../../domain/auth/LoginInfo';\r\nimport {AuthenticationDetails} from '../../domain/auth/AuthenticationDetails';\r\n\r\nimport {Constants} from './Constants';\r\nimport {LogService} from './LogService';\r\nimport {ErrorService} from './ErrorService';\r\nimport {StorageService} from './StorageService';\r\n\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n    private currentAuth: AuthenticationDetails;\r\n\r\n    public authChanged$: EventEmitter<AuthenticationDetails>;\r\n\r\n    constructor(private http: Http,\r\n        private constants: Constants,\r\n        private logService: LogService,\r\n        private errorService: ErrorService,\r\n        private storageService: StorageService) {\r\n        this.http = http;\r\n        this.constants = constants;\r\n        this.logService = logService;\r\n        this.errorService = errorService;\r\n        this.storageService = storageService;\r\n\r\n        this.authChanged$ = new EventEmitter<AuthenticationDetails>();\r\n    }\r\n\r\n    public getCurrentAuth(): AuthenticationDetails {\r\n        if (this.currentAuth == null) {\r\n            this.currentAuth = this.storageService.getLocalStorage<AuthenticationDetails>('authorizationData');\r\n            if (this.currentAuth == null) {\r\n                this.currentAuth = new AuthenticationDetails();\r\n                this.currentAuth.userName = '';\r\n                this.currentAuth.isAuth = false;\r\n            }\r\n            this.authChanged$.emit(this.currentAuth);\r\n        }\r\n        return this.currentAuth;\r\n    }\r\n\r\n    public authenticate(loginInfo: LoginInfo): void {\r\n        var creds = \"grant_type=password&username=\" + loginInfo.userName + \"&password=\" + loginInfo.password\r\n            + \"&client_id=default&client_secret=no-secret&scope=all\";\r\n\r\n        var headers = new Headers();\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        headers.append('X-XSRF-TOKEN', this.storageService.getCookie('XSRF-TOKEN'));\r\n\r\n        this.http.post(this.constants.getServiceBaseUrl() + 'connect/token', creds, {\r\n            headers: headers\r\n        }).map((res: Response) => res.json()).subscribe(\r\n            data => {\r\n                data.userName = loginInfo.userName;\r\n                this.currentAuth = data;\r\n                this.currentAuth.isAuth = true;\r\n                this.storageService.setLocalStorage('authorizationData', this.currentAuth);\r\n                this.authChanged$.emit(this.currentAuth);\r\n            },\r\n            err => {\r\n                this.logService.log(JSON.stringify(err));\r\n                this.errorService.logError(new ErrorInfo(JSON.stringify(err)));\r\n            });\r\n    }\r\n\r\n    public clearAuthData(): void {\r\n        this.currentAuth = new AuthenticationDetails();\r\n        this.currentAuth.userName = '';\r\n        this.currentAuth.isAuth = false;\r\n        this.storageService.setLocalStorage('authorizationData', this.currentAuth);\r\n    }\r\n\r\n    public logout(): void {\r\n        this.clearAuthData();\r\n        this.authChanged$.emit(this.currentAuth);\r\n    }\r\n}"],"sourceRoot":"/src"}