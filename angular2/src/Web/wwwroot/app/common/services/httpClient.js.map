{"version":3,"sources":["../../src/app/common/services/httpClient.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAaa,UAAU;gBAEnB,oBAAoB,IAAU,EAClB,UAAsB,EACtB,YAA0B,EAC1B,cAA8B,EAC9B,WAAwB;oBAJhB,SAAI,GAAJ,IAAI,CAAM;oBAClB,eAAU,GAAV,UAAU,CAAY;oBACtB,iBAAY,GAAZ,YAAY,CAAc;oBAC1B,mBAAc,GAAd,cAAc,CAAgB;oBAC9B,gBAAW,GAAX,WAAW,CAAa;oBAChC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;oBAC7B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;oBACjC,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;oBACrC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;gBACnC,CAAC;gBAEO,kCAAa,GAArB;oBACI,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;oBACjD,IAAI,WAAW,GAAG,QAAQ,IAAI,IAAI,IAAI,QAAQ,CAAC,YAAY,IAAI,IAAI,GAAG,QAAQ,CAAC,YAAY,GAAG,EAAE,CAAC;oBACjG,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;oBAE5D,MAAM,CAAC,IAAI,cAAO,CAAC;wBACf,cAAc,EAAE,kBAAkB;wBAClC,cAAc,EAAE,SAAS;wBACzB,eAAe,EAAE,SAAS,GAAG,WAAW;qBAC3C,CAAC,CAAC;gBACP,CAAC;gBAEM,wBAAG,GAAV,UAAW,GAAG;oBACV,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;wBACtB,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE;qBAChC,CAAC,CAAC;gBACP,CAAC;gBAEM,yBAAI,GAAX,UAAY,GAAG,EAAE,IAAI;oBACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE;wBAC7B,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE;qBAChC,CAAC,CAAC;gBACP,CAAC;gBAEM,2BAAM,GAAb,UAAc,GAAG;oBACb,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;wBACzB,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE;qBAChC,CAAC,CAAC;gBACP,CAAC;gBAGL,iBAAC;YAAD,CA7CA,AA6CC,IAAA;YA7CY,UAAU;gBADtB,iBAAU,EAAE;iDAGiB,WAAI;oBACN,uBAAU;oBACR,2BAAY;oBACV,+BAAc;oBACjB,yBAAW;eAN3B,UAAU,CA6CtB;;QAAA,CAAC","file":"httpClient.js","sourcesContent":["import { Http, Headers, Response } from '@angular/http';\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { ErrorInfo } from '../../domain/ErrorInfo';\r\nimport { AuthenticationDetails } from '../../domain/auth/AuthenticationDetails';\r\n\r\nimport { LogService } from './LogService';\r\nimport { ErrorService } from './ErrorService';\r\nimport { StorageService } from './StorageService';\r\nimport { AuthService } from './AuthService';\r\n\r\n@Injectable()\r\nexport class HttpClient {\r\n\r\n    constructor(private http: Http,\r\n        private logService: LogService,\r\n        private errorService: ErrorService,\r\n        private storageService: StorageService,\r\n        private authService: AuthService) {\r\n        this.http = http;\r\n        this.logService = logService;\r\n        this.errorService = errorService;\r\n        this.storageService = storageService;\r\n        this.authService = authService;\r\n    }\r\n\r\n    private createHeaders(): Headers {\r\n        var authData = this.authService.getCurrentAuth();\r\n        var accessToken = authData != null && authData.access_token != null ? authData.access_token : \"\";\r\n        var xsrfToken = this.storageService.getCookie('XSRF-TOKEN');\r\n\r\n        return new Headers({\r\n            'Content-Type': 'application/json',\r\n            'X-XSRF-TOKEN': xsrfToken,\r\n            'Authorization': 'Bearer ' + accessToken\r\n        });\r\n    }\r\n\r\n    public get(url) {\r\n        return this.http.get(url, {\r\n            headers: this.createHeaders()\r\n        });\r\n    }\r\n\r\n    public post(url, data) {\r\n        return this.http.post(url, data, {\r\n            headers: this.createHeaders()\r\n        });\r\n    }\r\n\r\n    public delete(url) {\r\n        return this.http.delete(url, {\r\n            headers: this.createHeaders()\r\n        });\r\n    }\r\n\r\n\r\n}"],"sourceRoot":"/src"}