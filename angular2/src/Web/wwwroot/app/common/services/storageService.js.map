{"version":3,"sources":["../../src/app/common/services/storageService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAKa,cAAc;gBAGvB,wBAAiC,UAAsB;oBACnD,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;gBACjC,CAAC;gBAEM,kCAAS,GAAhB,UAAiB,IAAI;oBACjB,IAAI,KAAK,GAAG,IAAI,GAAG,QAAQ,CAAC,MAAM,CAAC;oBACnC,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;oBAC3C,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;wBACrB,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;oBAC1C,CAAC;oBACD,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;gBAEM,wCAAe,GAAtB,UAA0B,GAAW;oBACjC,IAAI,IAAI,GAAQ,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBAC1C,IAAI,IAAO,CAAC;oBACZ,IAAI,CAAC;wBACD,IAAI,GAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;oBAC/B,CAAC;oBAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBACb,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,0EAA0E;4BAC1F,wCAAwC,GAAG,KAAK,CAAC,CAAC;wBACtD,IAAI,GAAG,IAAI,CAAC;oBAChB,CAAC;oBACD,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;gBAEM,wCAAe,GAAtB,UAAuB,GAAW,EAAE,KAAU;oBAC1C,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;gBACrD,CAAC;gBACL,qBAAC;YAAD,CAhCA,AAgCC,IAAA;YAhCY,cAAc;gBAD1B,iBAAU,EAAE;gBAIK,WAAA,aAAM,CAAC,uBAAU,CAAC,CAAA;iDAAa,uBAAU;eAH9C,cAAc,CAgC1B;;QAAA,CAAC","file":"storageService.js","sourcesContent":["import { Injectable, Inject } from '@angular/core';\r\n\r\nimport { LogService } from './LogService';\r\n\r\n@Injectable()\r\nexport class StorageService {\r\n    private logService: LogService;\r\n\r\n    constructor( @Inject(LogService) logService: LogService) {\r\n        this.logService = logService;\r\n    }\r\n\r\n    public getCookie(name): string {\r\n        let value = \"; \" + document.cookie;\r\n        let parts = value.split(\"; \" + name + \"=\");\r\n        if (parts.length === 2) {\r\n            return parts.pop().split(\";\").shift();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public getLocalStorage<T>(key: string): T {\r\n        var text: any = localStorage.getItem(key);\r\n        var data: T;\r\n        try {\r\n            data = <T>JSON.parse(text);\r\n        } catch (error) {\r\n            this.logService.log(\"LocalStorageService::readObject: can't convert string from local storage\" +\r\n                \" to object using JSON.parse(). Error: \" + error);\r\n            data = null;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    public setLocalStorage(key: string, value: any) {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n}"],"sourceRoot":"/src"}