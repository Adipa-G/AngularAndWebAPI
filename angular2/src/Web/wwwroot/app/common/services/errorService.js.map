{"version":3,"sources":["../../src/app/common/services/errorService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;YAQa,YAAY;gBAIrB,sBAAoB,UAAsB;oBAAtB,eAAU,GAAV,UAAU,CAAY;oBACtC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;oBAE7B,IAAI,CAAC,aAAa,GAAG,IAAI,mBAAY,EAAa,CAAC;oBACnD,IAAI,CAAC,iBAAiB,GAAG,IAAI,mBAAY,EAAa,CAAC;gBAC3D,CAAC;gBAEM,+BAAQ,GAAf,UAAgB,OAAkB;oBAC9B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;oBACjD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACrC,CAAC;gBAEM,sCAAe,GAAtB,UAAuB,KAAK;oBACxB,IAAI,SAAS,GAAG,IAAI,qBAAS,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;oBAErD,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;wBACvB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;wBAC3C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAC3C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;oBAC7B,CAAC;gBACL,CAAC;gBACL,mBAAC;YAAD,CA1BA,AA0BC,IAAA;YA1BY,YAAY;gBADxB,iBAAU,EAAE;iDAKuB,uBAAU;eAJjC,YAAY,CA0BxB;;QAAA,CAAC","file":"errorService.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nimport { ErrorInfo } from '../../domain/ErrorInfo';\r\n\r\nimport { LogService } from './LogService';\r\n\r\n@Injectable()\r\nexport class ErrorService {\r\n    public errorOccured$: EventEmitter<ErrorInfo>;\r\n    public authErrorOccured$: EventEmitter<ErrorInfo>;\r\n\r\n    constructor(private logService: LogService) {\r\n        this.logService = logService;\r\n\r\n        this.errorOccured$ = new EventEmitter<ErrorInfo>();\r\n        this.authErrorOccured$ = new EventEmitter<ErrorInfo>();\r\n    }\r\n\r\n    public logError(errInfo: ErrorInfo) {\r\n        this.logService.log('Error: ' + errInfo.message);\r\n        this.errorOccured$.emit(errInfo);\r\n    }\r\n\r\n    public handleHttpError(error) {\r\n        var errorInfo = new ErrorInfo(JSON.stringify(error));\r\n\r\n        if (error.status === 401) {\r\n            this.logService.log(JSON.stringify(error));\r\n            this.authErrorOccured$.emit(errorInfo);\r\n        } else {\r\n            this.logError(errorInfo);\r\n        }\r\n    }\r\n}"],"sourceRoot":"/src"}