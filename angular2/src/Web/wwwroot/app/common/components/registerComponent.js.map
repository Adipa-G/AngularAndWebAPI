{"version":3,"sources":["../../src/app/common/components/registerComponent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAgBa,iBAAiB;gBAI1B,2BAAoB,MAAc,EACtB,YAA0B,EAC1B,eAAgC;oBAFxB,WAAM,GAAN,MAAM,CAAQ;oBACtB,iBAAY,GAAZ,YAAY,CAAc;oBAC1B,oBAAe,GAAf,eAAe,CAAiB;oBAJpC,YAAO,GAAY,KAAK,CAAC;oBAK7B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;oBACrB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;oBACjC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;oBACvC,IAAI,CAAC,OAAO,GAAG,IAAI,mCAAgB,EAAE,CAAC;gBAC1C,CAAC;gBAEO,oCAAQ,GAAhB;oBAAA,iBAUC;oBATG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CACjD,UAAA,IAAI;wBACA,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;wBACpB,IAAI,CAAC,GAAG,aAAK,CAAC,IAAI,CAAC,CAAC;wBACpB,CAAC,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAhC,CAAgC,CAAC,CAAC;oBACxD,CAAC,EACD,UAAA,GAAG;wBACC,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;oBAC3C,CAAC,CAAC,CAAC;gBACX,CAAC;gBACL,wBAAC;YAAD,CAxBA,AAwBC,IAAA;YAxBY,iBAAiB;gBAL7B,gBAAS,CAAC;oBACP,QAAQ,EAAE,eAAe;oBACzB,WAAW,EAAE,gDAAgD;iBAChE,CAAC;iDAM8B,eAAM;oBACR,2BAAY;oBACT,iCAAe;eANnC,iBAAiB,CAwB7B;;QAAA,CAAC","file":"registerComponent.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { timer } from 'rxjs/Observable/timer';\r\n\r\nimport { RegistrationInfo } from '../../domain/common/RegistrationInfo';\r\n\r\nimport { ErrorService } from '../../common/services/ErrorService';\r\nimport { RegisterService } from '../services/RegisterService';\r\n\r\n\r\n@Component({\r\n    selector: 'common-signup',\r\n    templateUrl: './app/common/components/registerComponent.html'\r\n})\r\n\r\nexport class RegisterComponent {\r\n    private regInfo: RegistrationInfo;\r\n    private success: boolean = false;\r\n\r\n    constructor(private router: Router,\r\n        private errorService: ErrorService,\r\n        private registerService: RegisterService) {\r\n        this.router = router;\r\n        this.errorService = errorService;\r\n        this.registerService = registerService;\r\n        this.regInfo = new RegistrationInfo();\r\n    }\r\n\r\n    private register() {\r\n        this.registerService.register(this.regInfo).subscribe(\r\n            data => {\r\n                this.success = true;\r\n                let t = timer(5000);\r\n                t.subscribe(() => this.router.navigate(['/login']));\r\n            },\r\n            err => {\r\n                this.errorService.handleHttpError(err);\r\n            });\r\n    }\r\n}"],"sourceRoot":"/src"}