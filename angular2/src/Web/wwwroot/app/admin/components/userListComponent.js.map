{"version":3,"sources":["../../src/app/admin/components/userListComponent.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAaa,iBAAiB;gBAM1B,2BAAoB,YAA0B,EAAU,WAAwB;oBAA5D,iBAAY,GAAZ,YAAY,CAAc;oBAAU,gBAAW,GAAX,WAAW,CAAa;oBAC5E,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;oBACjC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;oBAC/B,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;oBAChB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oBAEpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,yBAAyB,EAAE,CAAC;oBACrD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACvC,CAAC;gBAEO,sCAAU,GAAlB,UAAmB,YAA0B;oBAA7C,iBAWC;oBAVG,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;oBACjC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAClD,UAAA,IAAI;wBACA,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;wBAC1B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;oBACtC,CAAC,EACD,UAAA,GAAG;wBACC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;wBACxC,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;oBAC3C,CAAC,CAAC,CAAC;gBACX,CAAC;gBAEO,qDAAyB,GAAjC;oBACI,IAAI,YAAY,GAAiB,IAAI,2BAAY,EAAE,CAAC;oBACpD,YAAY,CAAC,UAAU,GAAG,UAAU,CAAC;oBACrC,YAAY,CAAC,cAAc,GAAG,KAAK,CAAC;oBACpC,YAAY,CAAC,UAAU,GAAG,CAAC,CAAC;oBAC5B,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC;oBAC1B,MAAM,CAAC,YAAY,CAAC;gBACxB,CAAC;gBAEM,sCAAU,GAAjB,UAAkB,QAAgB;oBAAlC,iBAcC;oBAbG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC3C,UAAA,IAAI;wBACA,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;4BACzC,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC;gCACtC,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gCACxB,KAAK,CAAC;4BACV,CAAC;wBACL,CAAC;oBACL,CAAC,EACD,UAAA,GAAG;wBACC,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;wBACxC,KAAI,CAAC,YAAY,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;oBAC3C,CAAC,CAAC,CAAC;gBACX,CAAC;gBACL,wBAAC;YAAD,CArDA,AAqDC,IAAA;YArDY,iBAAiB;gBAL7B,gBAAS,CAAC;oBACP,QAAQ,EAAE,aAAa;oBACvB,WAAW,EAAE,+CAA+C;iBAC/D,CAAC;iDAQoC,2BAAY,EAAuB,yBAAW;eANvE,iBAAiB,CAqD7B;;QAAA,CAAC","file":"userListComponent.js","sourcesContent":["import {Component} from '@angular/core';\r\n\r\nimport {OrderAndPage} from '../../domain/common/OrderAndPage';\r\nimport {UserInfo} from '../../domain/admin/UserInfo';\r\n\r\nimport { ErrorService } from '../../common/services/ErrorService';\r\nimport {UserService} from '../services/UserService';\r\n\r\n@Component({\r\n    selector: 'admin-users',\r\n    templateUrl: './app/admin/components/userListComponent.html'\r\n})\r\n\r\nexport class UserListComponent {\r\n    private orderAndPage: OrderAndPage;\r\n    private errorMessage: string;\r\n    private users: UserInfo[];\r\n    private totalCount: number;\r\n\r\n    constructor(private errorService: ErrorService, private userService: UserService) {\r\n        this.errorService = errorService;\r\n        this.userService = userService;\r\n        this.users = [];\r\n        this.totalCount = 0;\r\n\r\n        this.orderAndPage = this.initOrderAndPagingDetails();\r\n        this.updateView(this.orderAndPage);\r\n    }\r\n\r\n    private updateView(orderAndPage: OrderAndPage) {\r\n        this.orderAndPage = orderAndPage;\r\n        this.userService.getUsers(this.orderAndPage).subscribe(\r\n            data => {\r\n                this.users = data.results;\r\n                this.totalCount = data.totalCount;\r\n            },\r\n            err => {\r\n                this.errorMessage = JSON.stringify(err);\r\n                this.errorService.handleHttpError(err);\r\n            });\r\n    }\r\n\r\n    private initOrderAndPagingDetails(): OrderAndPage {\r\n        var orderAndPage: OrderAndPage = new OrderAndPage();\r\n        orderAndPage.orderField = 'UserName';\r\n        orderAndPage.orderDirection = 'Asc';\r\n        orderAndPage.pageNumber = 1;\r\n        orderAndPage.pageSize = 5;\r\n        return orderAndPage;\r\n    }\r\n\r\n    public deleteUser(userName: string): void {\r\n        this.userService.deleteUser(userName).subscribe(\r\n            data => {\r\n                for (var i = 0; i < this.users.length; i++) {\r\n                    if (this.users[i].userName === userName) {\r\n                        this.users.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            },\r\n            err => {\r\n                this.errorMessage = JSON.stringify(err);\r\n                this.errorService.handleHttpError(err);\r\n            });\r\n    }\r\n}"],"sourceRoot":"/src"}