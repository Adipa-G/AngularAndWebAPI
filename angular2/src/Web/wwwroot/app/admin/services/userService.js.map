{"version":3,"sources":["../../src/app/admin/services/userService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAaa,WAAW;gBAIpB,qBAAiC,UAAsB,EAChC,SAAoB;oBACvC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;oBAC7B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;gBAC/B,CAAC;gBAEM,8BAAQ,GAAf,UAAgB,YAA0B;oBACtC,MAAM,CAAC,IAAI,CAAC,UAAU;yBACjB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,GAAG,kBAAkB,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;yBAC3F,GAAG,CAAC,UAAC,GAAa,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;gBAC5C,CAAC;gBAEM,gCAAU,GAAjB,UAAkB,QAAgB;oBAC9B,MAAM,CAAC,IAAI,CAAC,UAAU;yBACjB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,GAAG,cAAc,GAAG,QAAQ,CAAC;yBACtE,GAAG,CAAC,UAAC,GAAa,IAAK,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;gBAC5C,CAAC;gBACL,kBAAC;YAAD,CArBA,AAqBC,IAAA;YArBY,WAAW;gBADvB,iBAAU,EAAE;gBAKK,WAAA,aAAM,CAAC,uBAAU,CAAC,CAAA;gBAC3B,WAAA,aAAM,CAAC,qBAAS,CAAC,CAAA;iDADuB,uBAAU;oBACrB,qBAAS;eALlC,WAAW,CAqBvB;;QAAA,CAAC","file":"userService.js","sourcesContent":["import {Injectable, Inject} from '@angular/core';\r\nimport { Http, Response } from '@angular/http';\r\n\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\nimport {OrderAndPage} from '../../domain/common/OrderAndPage';\r\nimport {UserInfo} from '../../domain/admin/UserInfo';\r\n\r\nimport {HttpClient} from '../../common/services/HttpClient';\r\nimport {Constants} from '../../common/services/Constants';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    private httpClient: HttpClient;\r\n    private constants: Constants;\r\n\r\n    constructor( @Inject(HttpClient) httpClient: HttpClient,\r\n        @Inject(Constants) constants: Constants) {\r\n        this.httpClient = httpClient;\r\n        this.constants = constants;\r\n    }\r\n\r\n    public getUsers(orderAndPage: OrderAndPage) {\r\n        return this.httpClient\r\n            .post(this.constants.getServiceBaseUrl() + 'api/Account/list', JSON.stringify(orderAndPage))\r\n            .map((res: Response) => res.json());\r\n    }\r\n\r\n    public deleteUser(userName: string) {\r\n        return this.httpClient\r\n            .delete(this.constants.getServiceBaseUrl() + 'api/Account/' + userName)\r\n            .map((res: Response) => res.json());\r\n    }\r\n}"],"sourceRoot":"/src"}